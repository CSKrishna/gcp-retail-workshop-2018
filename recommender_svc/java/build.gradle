buildscript {
	ext {
		springBootVersion = '2.0.1.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

plugins {
	id "org.asciidoctor.convert" version "1.5.3"
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'checkstyle'
apply plugin: 'findbugs'
apply plugin: 'jacoco'
apply plugin: 'pmd'

group = 'com.precocity.gcp.retailwkshp'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}

ext {
    snippetsDir = file('build/generated-snippets')
}

ext['spring-restdocs.version'] = '2.0.1.RELEASE'

checkstyle {
	toolVersion = "8.10"
}

findbugs {
	sourceSets = [sourceSets.main]
}

tasks.withType(FindBugs) {
	reports {
		xml.enabled false
		html.enabled true
	}
	classes = files("$project.buildDir/classes/java/main")
}

jacoco {
	toolVersion = "0.8.1"
	reportsDir = file("${buildDir}/reports/jacoco")
}

jacocoTestReport {
	reports {
		xml.enabled true
		csv.enabled false
		html.destination file("${buildDir}/reports/coverage")
	}

	def excludes = []

	classDirectories = fileTree(
			dir: "$buildDir/classes/java",
			excludes: excludes
	) + fileTree(
			dir: "$buildDir/classes/kotlin/",
			excludes: excludes
	)

	// sources
	sourceDirectories = files([
			"src/main/java"
	])
}

dependencies {
	//Spring Boot
	implementation('org.springframework.boot:spring-boot-starter-actuator')
	implementation('org.springframework.boot:spring-boot-starter-web')
	//Used for local development to inject credentials, etc. -- Need file in $HOME/ .spring-boot-devtools.properties
	implementation("org.springframework.boot:spring-boot-devtools")

    //SpringFox for Swagger
    implementation group: 'io.springfox', name: 'springfox-swagger2', version: '2.8.0'
    implementation group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.8.0'

    //Google Cloud Libs
    implementation group: 'com.google.cloud', name: 'google-cloud-storage', version: '1.33.0'

	//Linear Algebra Lib
	implementation group: 'org.nd4j', name: 'nd4j-native-platform', version: '1.0.0-beta'
	implementation group: 'joinery', name: 'joinery-dataframe', version: '1.8'
	implementation group: 'org.apache.poi', name: 'poi', version: '3.17'
	implementation group: 'org.apache.commons', name: 'commons-csv', version: '1.5'


	//Logging
    implementation group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'

    //Testing
    testImplementation 'io.rest-assured:rest-assured:3.0.7'
    testImplementation('org.springframework.boot:spring-boot-starter-test')
	testImplementation 'org.springframework.restdocs:spring-restdocs-restassured'
	asciidoctor "org.springframework.restdocs:spring-restdocs-asciidoctor:${project.ext['spring-restdocs.version']}"
}

test {
    outputs.dir snippetsDir
	environment SPRING_PROFILES_ACTIVE: environment.SPRING_PROFILES_ACTIVE ?: "default"
}

check.dependsOn jacocoTestReport

asciidoctor {
	attributes 'snippets': snippetsDir
	inputs.dir snippetsDir
	outputDir "build/asciidoc"
	dependsOn test
	sourceDir 'src/docs/asciidoc'
}

task copyRestDocs(type: Copy) {
	dependsOn asciidoctor
	from "${asciidoctor.outputDir}/html5"
	into "${sourceSets.main.output.resourcesDir}/static/docs"
}

bootJar {
	dependsOn copyRestDocs
}

bootRun {
	if ( project.hasProperty('jvmArgs') ) {
		jvmArgs project.jvmArgs.split('\\s+')
	}
}